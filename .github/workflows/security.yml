name: Security Scanning

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'debtwise-api/pyproject.toml'
      - 'debtwise-api/uv.lock'
      - '.github/workflows/security.yml'

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Install dependencies
        working-directory: ./debtwise-api
        run: uv sync --frozen
      
      - name: Run pip-audit
        working-directory: ./debtwise-api
        run: |
          uv pip install pip-audit
          uv run pip-audit --desc --format json --output audit-report.json || true
      
      - name: Run safety check
        working-directory: ./debtwise-api
        run: |
          uv pip install safety
          uv run safety check --json --output safety-report.json || true
      
      - name: Check for outdated dependencies
        working-directory: ./debtwise-api
        run: |
          uv pip list --outdated || true
      
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: dependency-security-reports
          path: |
            ./debtwise-api/audit-report.json
            ./debtwise-api/safety-report.json

  code-scan:
    name: Static Code Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-and-quality
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
      
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/python
            p/django
            p/flask
            p/owasp-top-ten
            p/jwt
            p/sql-injection

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better detection
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        working-directory: ./debtwise-api
        run: |
          docker build \
            --target production \
            --tag debtwise-api:security-scan \
            .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'debtwise-api:security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          vuln-type: 'os,library'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run Grype scanner
        uses: anchore/scan-action@v3
        with:
          image: 'debtwise-api:security-scan'
          fail-build: false
          severity-cutoff: high

  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: all
          output_format: sarif
          output_file_path: checkov-results.sarif
          skip_check: CKV_DOCKER_2,CKV_DOCKER_3  # Skip non-root user checks for now
      
      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-scan, secret-scan, container-scan, infrastructure-scan]
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "Date: $(date)" >> security-summary.md
          echo "Commit: ${{ github.sha }}" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Scan Results" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
          echo "- Code Scan: ${{ needs.code-scan.result }}" >> security-summary.md
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-summary.md
          echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-summary.md
          echo "- Infrastructure Scan: ${{ needs.infrastructure-scan.result }}" >> security-summary.md
          
          # Add more detailed analysis here if needed
      
      - name: Create issue if vulnerabilities found
        if: |
          needs.dependency-scan.result == 'failure' ||
          needs.code-scan.result == 'failure' ||
          needs.secret-scan.result == 'failure' ||
          needs.container-scan.result == 'failure' ||
          needs.infrastructure-scan.result == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Security vulnerabilities detected - ${new Date().toISOString().split('T')[0]}`,
              body: `Security scans have detected potential vulnerabilities. Please review the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`,
              labels: ['security', 'automated']
            });
            console.log(`Created issue #${issue.data.number}`);
      
      - name: Upload security summary
        uses: actions/upload-artifact@v3
        with:
          name: security-summary
          path: security-summary.md